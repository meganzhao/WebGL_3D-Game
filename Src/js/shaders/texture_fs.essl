Shader.source[document.currentScript.src.split('js/shaders/')[1]] = `
	precision highp float;
	varying vec2 texCoord;
	uniform sampler2D colorTexture; 
	uniform vec4 lightPos[1]; // xyz is the direction, w is 0
	uniform vec4 powerDensity[1]; // w ignored

	varying vec4 worldPos;
	varying vec3 worldNormal;

	void main(void) {
		float cosTheta = dot(normalize(lightPos[0].xyz), normalize(worldNormal));

		//add for loop to add up all the light together
		gl_FragColor = powerDensity[0] * vec4(texture2D(colorTexture, texCoord).rgb * cosTheta,1);

		//mmm = normalize(lightPos.xyz - worldPos.xyz * lightPos.w)
		//for directional
		//vec3 M = powerDensity.rgb
		//for point
		//distance between lightPs and worldPos and square; powerDensity.rgb / dot(x,x)
		//x,x is the mmm without normalize
	}
`;